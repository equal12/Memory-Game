package MemoryGame.model;
import MemoryGame.controller.*;
import MemoryGame.view.*;

import java.util.ArrayList;
import java.util.Random;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;
import java.util.Iterator;
import java.awt.BorderLayout;
import java.awt.Dimension;

public class Board
{
  private ArrayList<Integer> cards = new ArrayList<Integer>();
  public Mode ui = new Mode();
  public MemoryController controller = new MemoryController(ui);
  private int c1;
  private int c2;
  public int pressCounter = 0;
  public int AtemptCounter = 0;
  Random randomizer; // To randomize the the values of the cards

  public Board(int level)
  {
	  switch (level){
			case 1: for (int i =1; i<7; i++){
						this.cards.add(i);
						this.cards.add(i);
					}
					break;
			case 2: for (int i =1; i<9; i++){
						this.cards.add(i);
						this.cards.add(i);
					}
					break;
			case 3: for (int i =1; i<11; i++){
						this.cards.add(i);
						this.cards.add(i);
					}
					break;
				}

	//boards will be chosen based on level
	//create each card
	randomizer = new Random();
    System.out.println("Board constructor randomized the mapped cards values");
  }

  //Board constructor with no shuffle -- used for testing -- to know values
  public Board()
  {
	  cards = new ArrayList<Integer>();
	  for(int i=0; i < cards.size(); i++)
	  {
		  cards.add(i);
		  cards.add(i);
	  }

	  System.out.println("from Board constructor -- no shuffle");

  }


  private void shuffle()
  {
	  for (int i = 0; i <cards.size(); i++)
	  {
		  int swap_with = randomizer.nextInt(cards.size());
		  int a = cards.get(i);
		  cards.set(i,cards.get(swap_with));
		  cards.set(swap_with,a);
	  }
  }


  //public void deal()//may not be needed in the future
  //{
	////how it deals will be based on the level/mode
    //System.out.println("Board assigns the gird with the randomized values");
  //}

  // she said "you'll need to keep track of whether it's card 1 or card 2.
  // You can do this in the controller or in the Board class."

  public void selectedCard(int buttonID)
  {
    //counter?
    //when the button is clicked, increment a counter then call this method
    controller.onFlipCard(buttonID);

    if(pressCounter == 1){
		c1 = cards.get(buttonID);
		System.out.println("c1 = " + c1);
	}
	else if (pressCounter == 2){
		pressCounter = 0;
		c2 = cards.get(buttonID);
		System.out.println("c2 = " + c2);
		controller.onCompare(c1, c2);
	}

   // System.out.println("Identifying card 1 or card 2 selected");
  }


  //public boolean playAgain(Result r)
    //{
        //int choice = JOptionPane.showConfirmDialog(mainFrame, "You "+r+". Play again?", "Results", JOptionPane.YES_NO_OPTION);
        //return choice == JOptionPane.YES_OPTION;
    //}

}//end board
